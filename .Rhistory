colnames(log_ret) = c('Date', ticker)
return(log_ret)
}
daily_log_returns = tibble(Date = seq(ymd('2017-01-01'), ymd('2026-01-01'), by='day'))
head(daily_log_returns)
original_portfolio_csv = list.files('original_portfolio_prices')
# install.packages('corrplot')
library(corrplot)
price_to_log_returns = function(parent_dir, file_name) {
rel_path = paste0(parent_dir, '/', file_name)
# check separator in file
first_line = readLines(paste0(parent_dir, '/', file_name), n=1)
separator = ''
if(grepl(';', first_line)) {
separator = ';'
} else {
separator = ','
}
# return(print(separator))
hist_price = read.csv(file = rel_path, sep = separator) %>%
select(1,2)
colnames(hist_price) = c('Date', 'Price')
hist_price$Date <- as.Date(hist_price$Date, format="%d.%m.%Y")
hist_price[,2] = as.numeric(lapply(hist_price[,2], gsub, pattern = ',', replacement = '.'))
# get log returns
ticker = unlist(strsplit(file_name, split = '[.]'))[1]
hist_price = hist_price[order(hist_price$Date),]
log_ret = hist_price[-1,]
log_ret[,2] = diff(log(hist_price[,2]))
colnames(log_ret) = c('Date', ticker)
return(log_ret)
}
original_portfolio_csv = list.files('original_portfolio_prices')
original_portfolio_csv = list.files('original_portfolio_prices')
original_portfolio_csv = list.files('original_portfolio_prices')
tickers = vector('character')
i = 1
for(fp in original_portfolio_csv){
tickers[i] = unlist(strsplit(fp, split = '[.]'))[1]
i = i + 1
}
for(ticker in tickers) {
f_name = paste0(ticker, '.', 'csv' )
log_ret = price_to_log_returns(all_parent_dir, f_name)
daily_log_returns = left_join(daily_log_returns, log_ret, by='Date')
}
daily_log_returns = tibble(Date = seq(ymd('2017-01-01'), ymd('2026-01-01'), by='day'))
head(daily_log_returns)
for(ticker in tickers) {
f_name = paste0(ticker, '.', 'csv' )
log_ret = price_to_log_returns('original_portfolio_prices', f_name)
daily_log_returns = left_join(daily_log_returns, log_ret, by='Date')
}
daily_log_returns = na.omit(daily_log_returns)
head(daily_log_returns)
original_portfolio_corr = corr(as.matrix(daily_log_returns[-1]))
original_portfolio_corr = cor(as.matrix(daily_log_returns[-1]))
corrplot(original_portfolio_corr, method = 'number')
?corrplot
corrplot(original_portfolio_corr, method = 'circle')
corrplot(original_portfolio_corr, method = 'pie')
corrplot(original_portfolio_corr, method = 'pie', col = 'blue')
corrplot(original_portfolio_corr, method = 'pie', col = 'grey')
corrplot(original_portfolio_corr, method = 'number', col = 'grey')
corrplot(original_portfolio_corr, method = 'shade', col = 'grey')
corrplot(original_portfolio_corr, method = 'color', col = 'grey')
corrplot(original_portfolio_corr, method = 'color')
corrplot(original_portfolio_corr, method = c('number', 'color')
corrplot(original_portfolio_corr, method = c('number', 'color'))
corrplot(original_portfolio_corr, method = color)
corrplot(original_portfolio_corr, method = 'color')
corrplot(original_portfolio_corr, method = 'color', title = 'Original Portfolio Correlation', tl.col = 'black')
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black')
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', shade.col = 'red')
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', shade.col = 'red', addshade = 'negative')
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', shade.col = 'red', addshade = 'positive')
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', shade.col = 'red', addshade = 'positive', number.digits = 1)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', shade.col = 'blue')
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', is.corr = TRUE)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', is.corr = FALSE)
?COL2
colorRampPalette(c('blue', 'white', 'red'))(200)
col_gradient = colorRampPalette(c('blue', 'white', 'red'))(200)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', col = col_gradient)
col_gradient = colorRampPalette(c('blue', 'white', 'red'))(300)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', col = col_gradient)
col_gradient = colorRampPalette(c('blue', 'white', 'red'))(100)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', col = col_gradient)
col_gradient = colorRampPalette(c('blue', 'white', 'red'))(200)
col_gradient = colorRampPalette(c('blue', 'white', 'pink', 'red'))(200)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', col = col_gradient)
col_gradient = colorRampPalette(c('blue', 'lightblue', 'white', 'pink', 'red'))(200)
col_gradient = colorRampPalette(c('blue', 'lightblue', 'white', 'pink', 'red'))(200)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', col = col_gradient)
corrplot(original_portfolio_corr, method = 'color', tl.col = 'black', col = col_gradient, type = 'lower')
list.files('crypto_prices')
for(fp in list.files('crypto_prices')) {
print(head(read.csv(paste0('crypto_prices', '/', fp))))
}
btc_prices = read.csv(paste0('crypto_prices', '/', 'BTC-USD'))
btc_prices = read.csv(paste0('crypto_prices', '/', 'BTC-USD.csv'))
btc_prices$Price
btc_prices$Price %>% as.numeric()
as.numeric(btc_prices$Price)
btc_prices = read.csv(paste0('crypto_prices', '/', 'BTC-USD.csv'))
btc_prices$Price
?grepl
lapply(btc_prices, gsub, pattern = ',', replacement = '')
lapply(btc_prices$Price, gsub, pattern = ',', replacement = '')
as.numeric(lapply(btc_prices$Price, gsub, pattern = ',', replacement = ''))
btc_prices = read.csv(paste0('crypto_prices', '/', 'BTC-USD.csv'))
btc_prices$Price
# convert character '20,000' with comma into numeric
as.numeric(lapply(btc_prices$Price, gsub, pattern = ',', replacement = ''))
list.files('crypto_prices')
csv_file_names = list.files('crypto_prices')
for(fp in csc_file_names) {
print(head(read.csv(paste0('crypto_prices', '/', fp))))
}
for(fp in csv_file_names) {
print(head(read.csv(paste0('crypto_prices', '/', fp))))
}
as.Date(btc_prices$Date, format = '%m/%d%y')
as.Date(btc_prices$Date, format = '%m/%d/%y')
new_folder = 'crypto_prices_cleaned'
for(fp in csv_file_names) {
# print(head(read.csv(paste0('crypto_prices', '/', fp))))
df = read.csv(read.csv(paste0('crypto_prices', '/', fp)))
df$Date = as.Date(df$Date, format = '%m/%d/%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp))
}
for(fp in csv_file_names) {
# print(head(read.csv(paste0('crypto_prices', '/', fp))))
df = read.csv(read.csv(paste0('crypto_prices', '/', fp)))
df$Date = as.Date(df$Date, format = '%m/%d/%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp))
}
csv_file_names = list.files('crypto_prices')
new_folder = 'crypto_prices_cleaned'
for(fp in csv_file_names) {
# print(head(read.csv(paste0('crypto_prices', '/', fp))))
df = read.csv(read.csv(paste0('crypto_prices', '/', fp)))
df$Date = as.Date(df$Date, format = '%m/%d/%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp))
}
getcd()
getwd()
for(fp in csv_file_names) {
# print(head(read.csv(paste0('crypto_prices', '/', fp))))
df = read.csv(read.csv(paste0('crypto_prices', '/', fp)))
df$Date = as.Date(df$Date, format = '%m/%d/%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
print(head(df, n=2))
# write.csv(df, paste0(new_folder, '/', fp))
}
for(fp in csv_file_names) {
df = read.csv(read.csv(paste0('crypto_prices', '/', fp)))
print(head(df, n=2))
# df$Date = as.Date(df$Date, format = '%m/%d/%y')
# df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
# print(head(df, n=2))
# write.csv(df, paste0(new_folder, '/', fp))
}
for(fp in csv_file_names) {
df = read.csv(paste0('crypto_prices', '/', fp))
print(head(df, n=2))
# df$Date = as.Date(df$Date, format = '%m/%d/%y')
# df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
# print(head(df, n=2))
# write.csv(df, paste0(new_folder, '/', fp))
}
for(fp in csv_file_names) {
df = read.csv(paste0('crypto_prices', '/', fp))
df$Date = as.Date(df$Date, format = '%m/%d/%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp))
}
for(fp in csv_file_names) {
df = read.csv(paste0('crypto_prices', '/', fp))
df$Date = as.Date(df$Date, format = '%m/%d/%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
source("C:/Users/pat_h/OneDrive/p-spohr-repos/Optimisfits/max_sharpe_ratio.R")
getwd()
csv_file_names = list.files('stock_prices')
new_folder = 'stock_prices_cleaned'
csv_file_names = list.files('stock_prices')
new_folder = 'stock_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0('stock_prices', '/', fp), sep = ';')
df$Date = as.Date(df$Date, format = '%d.%m.%y')
df$Price = as.numeric(lapply(df$Price, gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0('stock_prices', '/', fp), sep = ';')
df$Date = as.Date(df$Date, format = '%d.%m.%y')
df$Close = as.numeric(lapply(df$Close, gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0('stock_prices', '/', fp), sep = ';')
df$Date = as.Date(df$Date, format = '%d.%m.%y')
df$Close = as.numeric(lapply(df$Close, gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
aapl_prices = read.csv(paste0('stock_prices_cleaned'/', 'AAPL.csv'))
aapl_prices = read.csv(paste0('stock_prices_cleaned', '/', 'AAPL.csv'))
head(aapl_prices)
csv_file_names = list.files('stock_prices')
new_folder = 'stock_prices_cleaned'
csv_file_names = list.files('etf_prices')
new_folder = 'etf_prices_cleaned'
aapl_prices[2]
aapl_prices[[2]]
aapl_prices[2]
csv_file_names = list.files('etf_prices')
new_folder = 'etf_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0('etf_prices', '/', fp), sep = ';')
df[1] = as.Date(df[1], format = '%d.%m.%y')
df[2] = as.numeric(lapply(df[2], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
amem_prices = read.csv(paste0('etf_prices', '/', 'AMEM.csv'))
head(amem_prices)
amem_prices = read.csv(paste0('etf_prices', '/', 'AMEM.csv'), sep = ';')
amem_prices = read.csv(paste0('etf_prices', '/', 'AMEM.csv'), sep = ';')
amem_prices = read.csv(paste0('etf_prices', '/', 'AMEM.csv'), sep = ';')
amem_prices = read.csv(paste0('etf_prices', '/', 'AMEM.csv'), sep = ';')
head(amem_prices)
for(fp in csv_file_names) {
df = read.csv(paste0('etf_prices', '/', fp), sep = ';')
df[1] = as.Date(df[1], format = '%d.%m.%y')
df[2] = as.numeric(lapply(df[2], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
amem_prices$Date
amem_prices[[2]]
for(fp in csv_file_names) {
df = read.csv(paste0('etf_prices', '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
csv_file_names = list.files('metals_prices')
new_folder = 'metals_prices_cleaned'
csv_file_names = list.files('metals_prices')
new_folder = 'metals_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0('etf_prices', '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
target_folder = 'metal_prices'
csv_file_names = list.files(target_folder)
new_folder = 'metals_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0(target_folder, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0(target_folder, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
target_folder = 'metals_prices'
csv_file_names = list.files(target_folder)
new_folder = 'metals_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0(target_folder, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
# Set up current portfolio meta information ####
parent_dir = "C:\\Users\\pat_h\\OneDrive\\p-spohr-repos\\Optimisfits\\cleaned_prices\\etf_prices_cleaned"
# Set up current portfolio meta information ####
parent_dir = "C:\\Users\\pat_h\\OneDrive\\p-spohr-repos\\Optimisfits\\cleaned_prices\\etf_prices_cleaned"
# Set up current portfolio meta information ####
parent_dir = "C:\\Users\\pat_h\\OneDrive\\p-spohr-repos\\Optimisfits\\cleaned_prices\\etf_prices_cleaned"
# Set up current portfolio meta information ####
# parent_dir = 'etf_prices'
path_to_portfolio = "C:\\Users\\pat_h\\OneDrive\\p-spohr-repos\\Optimisfits\\cleaned_prices\\etf_prices_cleaned"
# Set up current portfolio meta information ####
parent_dir = 'cleaned_prices/etf_prices_cleaned'
path_to_portfolio = paste0(getwd(), '/', parent_dir)
csv_files = list.files(path_to_portfolio)
tickers = vector('character')
i = 1
for (fp in csv_files) {
# print(unlist(strsplit(fp, split = '[.]')))
tickers[i] = unlist(strsplit(fp, split = '[.]'))[1]
i = i + 1
}
target_port_csv = 'portfolio_v1.csv'
all_parent_dir = 'cleaned_prices/etf_prices_cleaned'
path_to_all = paste0(getwd(), '/', all_parent_dir)
all_parent_dir = 'cleaned_prices/etf_prices_cleaned'
path_to_all = paste0(getwd(), '/', all_parent_dir)
all_security_csv = list.files(path_to_all)
n_stocks = length(port_meta$Ticker)
port_meta = read.csv(paste0(getwd(), '/', target_port_csv))
port_meta
port_meta = read.csv(paste0(path_to_all, '/', target_port_csv))
port_meta
port_meta = read.csv(paste0(path_to_all, '/', target_port_csv))
target_port_csv = 'portfolio_v1.csv'
port_meta = read.csv(paste0(path_to_all, '/', target_port_csv))
port_meta
target_port_csv = 'portfolio_v1.csv'
port_meta = read.csv(paste0(getwd(), '/', target_port_csv))
port_meta
port_meta %>%
filter(Port == 1)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
library(lubridate)
all_parent_dir = 'cleaned_prices/etf_prices_cleaned'
path_to_all = paste0(getwd(), '/', all_parent_dir)
all_security_csv = list.files(path_to_all)
target_port_csv = 'portfolio_v1.csv'
port_meta = read.csv(paste0(getwd(), '/', target_port_csv))
port_meta %>%
filter(Port == 1)
target_portfolio = port_meta %>%
filter(Port == 1)
n_stocks = length(target_portfolio$Ticker)
target_dir = 'raw_data_prices/crypto_prices'
csv_file_names = list.files(target_dir)
# clean crypto prices ####
##########################
target_dir = 'raw_data_prices/crypto_prices'
# clean crypto prices ####
##########################
target_dir = 'raw_data_prices/crypto_prices'
# clean crypto prices ####
##########################
target_dir = 'raw_data_prices/crypto_prices'
csv_file_names = list.files(target_dir)
new_folder = 'crypto_prices_cleaned'
new_folder = 'crypto_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0(targete_dir, '/', fp))
df[[1]] = as.Date(df[[1]], format = '%m/%d/%Y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0(target_dir, '/', fp))
df[[1]] = as.Date(df[[1]], format = '%m/%d/%Y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0(target_dir, '/', fp))
df[[1]] = as.Date(df[[1]], format = '%m/%d/%Y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = ''))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
target_dir = 'raw_data_prices/stock_prices'
csv_file_names = list.files(target_dir)
new_folder = 'stock_prices_cleaned'
csv_file_names = list.files(target_dir)
target_dir = 'raw_data_prices/stock_prices'
csv_file_names = list.files(target_dir)
new_folder = 'stock_prices_cleaned'
csv_file_names = list.files(target_dir)
for(fp in csv_file_names) {
df = read.csv(paste0(target_dir, '/', fp), sep = ';')
df$Date = as.Date(df$Date, format = '%d.%m.%Y')
df$Close = as.numeric(lapply(df$Close, gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0(target_dir, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%Y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
target_dir = 'raw_data_prices/etf_prices'
csv_file_names = list.files(target_dir)
new_folder = 'etf_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0(target_dir, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%Y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
target_folder = 'raw_data_prices/metals_prices'
target_folder = 'raw_data_prices/metals_prices'
csv_file_names = list.files(target_folder)
new_folder = 'metals_prices_cleaned'
for(fp in csv_file_names) {
df = read.csv(paste0(target_folder, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
for(fp in csv_file_names) {
df = read.csv(paste0(target_folder, '/', fp), sep = ';')
df[[1]] = as.Date(df[[1]], format = '%d.%m.%Y')
df[[2]] = as.numeric(lapply(df[[2]], gsub, pattern = ',', replacement = '.'))
write.csv(df, paste0(new_folder, '/', fp), row.names = FALSE)
}
library(dplyr)
library(tidyr)
library(ggplot2)
library(tibble)
library(lubridate)
all_parent_dir = 'all_cleaned_prices_test'
path_to_all = paste0(getwd(), '/', all_parent_dir)
all_security_csv = list.files(path_to_all)
target_port_csv = 'portfolio_v1.csv'
port_meta = read.csv(paste0(getwd(), '/', target_port_csv))
target_portfolio = port_meta %>%
filter(Port == 1)
n_stocks = length(target_portfolio$Ticker)
price_to_log_returns = function(parent_dir, file_name) {
rel_path = paste0(parent_dir, '/', file_name)
hist_price = read.csv(file = rel_path, sep = ',') %>%
select(1,2)
colnames(hist_price) = c('Date', 'Price')
hist_price$Date <- as.Date(hist_price$Date, format="%d.%m.%Y")
hist_price[,2] = as.numeric(lapply(hist_price[,2], gsub, pattern = ',', replacement = '.'))
# get log returns
ticker = unlist(strsplit(file_name, split = '[.]'))[1]
hist_price = hist_price[order(hist_price$Date),]
log_ret = hist_price[-1,]
log_ret[,2] = diff(log(hist_price[,2]))
colnames(log_ret) = c('Date', ticker)
return(log_ret)
}
price_to_log_returns = function(parent_dir, file_name) {
rel_path = paste0(parent_dir, '/', file_name)
hist_price = read.csv(file = rel_path, sep = ',') %>%
select(1,2)
colnames(hist_price) = c('Date', 'Price')
hist_price$Date <- as.Date(hist_price$Date, format="%Y-%m-%d")
# get log returns
ticker = unlist(strsplit(file_name, split = '[.]'))[1]
hist_price = hist_price[order(hist_price$Date),]
log_ret = hist_price[-1,]
log_ret[,2] = diff(log(hist_price[,2]))
colnames(log_ret) = c('Date', ticker)
return(log_ret)
}
daily_log_returns = tibble(Date = seq(ymd('2017-01-01'), ymd('2026-01-01'), by='day'))
head(daily_log_returns)
for(ticker in port_meta$Ticker) {
f_name = paste0(ticker, '.', 'csv' )
log_ret = price_to_log_returns(all_parent_dir, f_name)
daily_log_returns = left_join(daily_log_returns, log_ret, by='Date')
}
for(ticker in target_portfolio$Ticker) {
f_name = paste0(ticker, '.', 'csv' )
log_ret = price_to_log_returns(all_parent_dir, f_name)
daily_log_returns = left_join(daily_log_returns, log_ret, by='Date')
}
target_portfolio$Ticker
target_portfolio$Ticker
daily_log_returns = tibble(Date = seq(ymd('2017-01-01'), ymd('2026-01-01'), by='day'))
head(daily_log_returns)
for(ticker in target_portfolio$Ticker) {
f_name = paste0(ticker, '.', 'csv' )
log_ret = price_to_log_returns(all_parent_dir, f_name)
daily_log_returns = left_join(daily_log_returns, log_ret, by='Date')
}
head(daily_log_returns)
dim(daily_log_returns)
all_parent_dir = 'all_cleaned_prices_test'
path_to_all = paste0(getwd(), '/', all_parent_dir)
all_security_csv = list.files(path_to_all)
target_port_csv = 'portfolio_v1.csv'
port_meta = read.csv(paste0(getwd(), '/', target_port_csv))
target_portfolio = port_meta %>%
filter(Port == 1)
n_stocks = length(target_portfolio$Ticker)
price_to_log_returns = function(parent_dir, file_name) {
rel_path = paste0(parent_dir, '/', file_name)
hist_price = read.csv(file = rel_path, sep = ',') %>%
select(1,2)
colnames(hist_price) = c('Date', 'Price')
hist_price$Date <- as.Date(hist_price$Date, format="%Y-%m-%d")
# get log returns
ticker = unlist(strsplit(file_name, split = '[.]'))[1]
hist_price = hist_price[order(hist_price$Date),]
log_ret = hist_price[-1,]
log_ret[,2] = diff(log(hist_price[,2]))
colnames(log_ret) = c('Date', ticker)
return(log_ret)
}
target_portfolio$Ticker
all_parent_dir = 'all_cleaned_prices_test'
path_to_all = paste0(getwd(), '/', all_parent_dir)
all_security_csv = list.files(path_to_all)
target_port_csv = 'portfolio_v1.csv'
port_meta = read.csv(paste0(getwd(), '/', target_port_csv))
target_portfolio = port_meta %>%
filter(Port == 1)
all_parent_dir = 'all_cleaned_prices_test'
path_to_all = paste0(getwd(), '/', all_parent_dir)
